# =================================================================
#    SENTIRIC PLATFORM - STANDART CI/CD DOCKER YAYINLAMA v4.1
# =================================================================
name: Docker Image CI (CPU & GPU)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_and_push_matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - target: cpu
            tag_suffix: cpu
          - target: gpu
            tag_suffix: gpu

    steps:
      - name: Check out the repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prepare Dynamic Build Arguments
        id: prep
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          SERVICE_VERSION=$(grep '^version' pyproject.toml | cut -d '"' -f2)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV
          echo "REPO_NAME_LOWER=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Generate Docker Tags for ${{ matrix.target }}
        id: meta
        run: |
          TAGS="ghcr.io/${{ env.REPO_NAME_LOWER }}:latest-${{ matrix.tag_suffix }},ghcr.io/${{ env.REPO_NAME_LOWER }}:${{ env.SERVICE_VERSION }}-${{ matrix.tag_suffix }}-${{ env.GIT_COMMIT }}"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      # --- DÜZELTME BURADA: PYTORCH_EXTRA_INDEX_URL build-arg'ı kaldırıldı ---
      - name: Build and push ${{ matrix.target }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # build-args artık sadece versiyon bilgilerini içeriyor
          build-args: |
            SERVICE_VERSION=${{ env.SERVICE_VERSION }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            BUILD_DATE=${{ env.BUILD_DATE }}
          cache-from: type=gha,scope=${{ github.ref }}-${{ matrix.target }}
          cache-to: type=gha,scope=${{ github.ref }}-${{ matrix.target }},mode=max